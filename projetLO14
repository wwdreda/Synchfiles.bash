#!/bin/bash

# Les chemins vers les systèmes de fichiers A et B
pathA=$1
pathB=$2

# Liste des fichiers/répertoires à exclure de la synchronisation
exclusions=("fichier_temporaire.txt" "cache")

# Fonction pour vérifier si un fichier/répertoire doit être exclu
est_exclu() {
    for exclusion in "${exclusions[@]}"; do
        if [[ $1 == *"$exclusion"* ]]; then
            return 0
        fi
    done
    return 1
}

# Fonction pour synchroniser les fichiers
synchroniser() {
    local pathA=$1
    local pathB=$2

    # Parcourir tous les fichiers dans le système de fichiers A
    for fichierA in "$pathA"/*; do
        # Vérifier si le fichier/répertoire est dans la liste des exclusions
        if est_exclu "$fichierA"; then
            echo "Exclusion : $fichierA"
            continue
        fi
        # Obtenir le nom du fichier
        nomFichier=$(basename "$fichierA")
        # Chemin vers le fichier correspondant dans le système de fichiers B
        fichierB="$pathB/$nomFichier"
        # Vérifier si le fichier existe dans le système de fichiers B
        if [[ -e $fichierB ]]; then
            # Si les deux fichiers sont des répertoires, descendre récursivement
            if [[ -d $fichierA && -d $fichierB ]]; then
                synchroniser "$fichierA" "$fichierB"
            # Si les deux fichiers sont des fichiers ordinaires et ont le même hachage SHA, il n'y a rien à faire
            elif [[ -f $fichierA && -f $fichierB && $(shasum "$fichierA") == $(shasum "$fichierB") ]]; then
                echo "Le fichier $nomFichier est déjà synchronisé."
            else
                # Conflit détecté
                echo "Conflit détecté pour le fichier $nomFichier."
                # Comparer le contenu des fichiers
                if cmp -s "$fichierA" "$fichierB"; then
                    echo "Les fichiers ont le même contenu, mais diffèrent dans les métadonnées."
                    # Résoudre le conflit en copiant les métadonnées du fichier qui est conforme au journal
                    if [[ $(shasum "$fichierA") == $(cat "$HOME/.synchro/$nomFichier") ]]; then
                        chown --reference="$fichierA" "$fichierB"
                        chmod --reference="$fichierA" "$fichierB"
                        touch --reference="$fichierA" "$fichierB"
                        echo "Les métadonnées du fichier B ont été mises à jour pour correspondre à celles du fichier A."
                    else
                        chown --reference="$fichierB" "$fichierA"
                        chmod --reference="$fichierB" "$fichierA"
                        touch --reference="$fichierB" "$fichierA"
                        echo "Les métadonnées du fichier A ont été mises à jour pour correspondre à celles du fichier B."
                    fi
                else
                    echo "Les fichiers ont un contenu différent. Le conflit doit être résolu manuellement."
                fi
            fi
        else
            # Copier le fichier de A vers B
            cp -a "$fichierA" "$fichierB"
            echo "Le fichier $nomFichier a été copié de A vers B."
        fi
        # Mettre à jour le journal avec le hachage SHA du fichier synchronisé
        shasum "$fichierA" > "$HOME/.synchro/$nomFichier"
    done

    # Parcourir tous les fichiers dans le système de fichiers B
    for fichierB in "$pathB"/*; do
        # Vérifier si le fichier/répertoire est dans la liste des exclusions
        if est_exclu "$fichierB"; then
            echo "Exclusion : $fichierB"
            continue
        fi
        # Obtenir le nom du fichier
        nomFichier=$(basename "$fichierB")
        # Chemin vers le fichier correspondant dans le système de fichiers A
        fichierA="$pathA/$nomFichier"
        # Vérifier si le fichier existe dans le système de fichiers A
        if [[ ! -e $fichierA ]]; then
            # Copier le fichier de B vers A
            cp -a "$fichierB" "$fichierA"
            echo "Le fichier $nomFichier a été copié de B vers A."
        fi
        # Mettre à jour le journal avec le hachage SHA du fichier synchronisé
        shasum "$fichierB" > "$HOME/.synchro/$nomFichier"
    done
}

# Créer le répertoire pour le fichier journal s'il n'existe pas
mkdir -p "$HOME/.synchro"

# Appeler la fonction de synchronisation
synchroniser $pathA $pathB
